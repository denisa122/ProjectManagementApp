name: Node.JS CI/CD

on: 
  push:
    branches: [main]

jobs:

  test-backend:

    name: Test Backend
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies and run tests
        run: |
          npm install
          npm test
        working-directory: .
        env:
          DBHOST: ${{ secrets.DBHOST }}
          TOKEN_SECRET: ${{ secrets.TOKEN_SECRET }}
          JWT_EXPIRES_IN: ${{ secrets.JWT_EXPIRES_IN }}

  test-frontend:
    name: Test Frontend
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies and run tests
        run: |
          npm install --force
          npm test
        working-directory: frontend/project-manager

  deploy-backend:

    name: Deploy Backend
    needs: [test-backend]
    runs-on: ubuntu-latest

    steps:
      - name: Deploy Backend
        if: github.ref == 'refs/heads/main'
        env:
          deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL}}
        run: |
          curl "$deploy_url"

  deploy-frontend:

    name: Deploy Frontend
    needs: [test-frontend]
    runs-on: ubuntu-latest

    steps:
      - name: Deploy Frontend
        if: github.ref == 'refs/heads/main'
        env:
          deploy_url: ${{ secrets.RENDER_FRONTEND_DEPLOY_HOOK_URL}}
        run: |
          curl "$deploy_url"
